(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[15],{1668:(s,e,n)=>{"use strict";n.d(e,{R:()=>i});var l=n(4232);let a=l.createContext({});function i(s){let e=l.useContext(a);return l.useMemo(function(){return"function"==typeof s?s(e):{...e,...s}},[e,s])}},2120:(s,e,n)=>{"use strict";function l(s){return new Date(`${s}T00:00:00Z`).toLocaleDateString("en-US",{day:"numeric",month:"long",year:"numeric",timeZone:"UTC"})}n.d(e,{Y:()=>l})},4348:(s,e,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/articles/hr-application",function(){return n(8144)}])},7328:(s,e,n)=>{s.exports=n(9836)},8144:(s,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>h,meta:()=>c});var l=n(7876),a=n(1668),i=n(9172);let c={author:"Daniel Butler",date:"2023-03-08",title:"Rust HR Example Question",description:"Rust Book example and solution to the HR application exercise."},t=s=>(0,l.jsx)(i.T,{meta:c,...s});function r(s){let e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",...(0,a.R)(),...s.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h1,{children:"Overview"}),"\n",(0,l.jsxs)(e.p,{children:["This is ",(0,l.jsx)(e.a,{href:"https://doc.rust-lang.org/stable/book/ch08-03-hash-maps.html#summary",children:"the third example problem"})," from the rust book. As before there will be a python example then the Rust example."]}),"\n",(0,l.jsx)(e.h2,{children:"Problem Statement"}),"\n",(0,l.jsx)(e.p,{children:"Using a hash map and vectors, create a text interface to allow a user to add employee names to a department in a company. For example, “Add Sally to Engineering” or “Add Amir to Sales.” Then let the user retrieve a list of all people in a department or all people in the company by department, sorted alphabetically."}),"\n",(0,l.jsx)(e.h3,{children:"Input"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"Add Sally to Engineering\nAdd Amir to Sales\nAdd Juan to Accounting\nAdd George to HR\nAdd Eric to Sales\nAdd Sam to Engineering\nAdd Cole to Engineering\nList Employees\nList Sales\nList Engineering\nList HR\n"})}),"\n",(0,l.jsx)(e.h2,{children:"Python"}),"\n",(0,l.jsx)(e.p,{children:"This uses a simple while loop and stores the data in a dictionary by department which is flattened with a simple list comprehension."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-python",children:["employees = {}\nrepeat = ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"True"}),"\n\n\n",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"def"})," ",(0,l.jsx)(e.span,{className:"hljs-title function_",children:"company"}),"(",(0,l.jsx)(e.span,{className:"hljs-params",children:"command"}),"):\n	command_words = command.split(",(0,l.jsx)(e.span,{className:"hljs-string",children:'" "'}),")\n	cmd = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"0"}),"].lower()\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," cmd == ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"add"'}),":\n		name = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"1"}),"]\n		department = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"3"}),"].lower()\n		emp_department = employees.get(department, [])\n		emp_department.append(name)\n		employees[department] = emp_department\n		",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"print"}),"(",(0,l.jsxs)(e.span,{className:"hljs-string",children:['f"Added ',(0,l.jsx)(e.span,{className:"hljs-subst",children:"{name}"})," to ",(0,l.jsx)(e.span,{className:"hljs-subst",children:"{department}"}),'!"']}),")\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"elif"})," cmd == ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"list"'}),":\n		list_type = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"1"}),"].lower()\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," list_type == ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"employees"'}),":\n			emps = [\n				emp\n				",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"for"})," emps_dep ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"in"})," employees.values()\n				",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"for"})," emp ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"in"})," emps_dep\n			]\n			emps.sort()\n			",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"print"}),"(",(0,l.jsxs)(e.span,{className:"hljs-string",children:['f"Employees: ',(0,l.jsx)(e.span,{className:"hljs-subst",children:"{emps}"}),'"']}),")\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"else"}),":\n			emps = employees.get(list_type, [])\n			emps.sort()\n			",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"print"}),"(",(0,l.jsxs)(e.span,{className:"hljs-string",children:['f"Employees in Department ',(0,l.jsx)(e.span,{className:"hljs-subst",children:"{list_type}"}),": ",(0,l.jsx)(e.span,{className:"hljs-subst",children:"{emps}"}),'"']}),")\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"elif"})," cmd ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"in"})," [",(0,l.jsx)(e.span,{className:"hljs-string",children:'"exit"'}),", ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"quit"'}),"]:\n		",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"print"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'f"Exiting..."'}),")\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"return"})," ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"False"}),"\n	\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"return"})," ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"True"}),"\n\n\n",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"print"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Welcome: to the employee directory! when you are done type exit.\\n============================\\n"'}),")\n\n",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"while"})," repeat:\n	command = ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"input"}),"()\n	repeat = company(command)\n	\n"]})}),"\n",(0,l.jsx)(e.p,{children:"Output"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"Welcome: to the employee directory! when you are done type exit.\n============================\n\nAdd Sally to Engineering\nAdded Sally to engineering!\nAdd Amir to Sales\nAdded Amir to sales!\nAdd Juan to Accounting\nAdded Juan to accounting!\nAdd George to HR\nAdded George to hr!\nAdd Eric to Sales\nAdded Eric to sales!\nAdd Sam to Engineering\nAdded Sam to engineering!\nAdd Cole to Engineering\nAdded Cole to engineering!\nlist employees \nEmployees: ['Amir', 'Cole', 'Eric', 'George', 'Juan', 'Sally', 'Sam']\nlist sales\nEmployees in Department sales: ['Amir', 'Eric']\nlist engineering\nEmployees in Department engineering: ['Cole', 'Sally', 'Sam']\nlist hr \nEmployees in Department hr: ['George']\nexit\nExiting...\n"})}),"\n",(0,l.jsx)(e.h2,{children:"Rust"}),"\n",(0,l.jsxs)(e.p,{children:["This is my original rust solution. The solution takes advantage of the lessons learned from the median and mode refactoring by using entries when modifying ",(0,l.jsx)(e.code,{children:"HashMap"}),"s. When running into issues about typing being off or the size not being known at compile time, the errors made more sense. The stack vs. the heap is an integral concept that is never touched on in python."]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-rust",children:[(0,l.jsx)(e.span,{className:"hljs-keyword",children:"use"})," std::collections::HashMap;\n",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"use"})," std::io;\n\n",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"fn"})," ",(0,l.jsx)(e.span,{className:"hljs-title function_",children:"main"}),"() {\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"employees_real"}),": HashMap<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),", ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),">> = HashMap::",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"new"}),"();\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"repeat"})," = ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),";\n	\n	",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Welcome: to the employee directory! when you are done type exit."'}),");\n	",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"============================"'}),");\n	\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"while"})," repeat {\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"input"})," = ",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),"::",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"new"}),"();\n		io::",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"stdin"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"read_line"}),"(&",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut"})," input).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"expect"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Invalid input!"'}),");\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"input"})," = input.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"trim"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_string"}),"();\n		",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Input: {}"'}),", input);\n		repeat = ",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"record_employee"}),"(&input, &",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut"})," employees_real);\n	}\n}\n\n",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"fn"})," ",(0,l.jsx)(e.span,{className:"hljs-title function_",children:"record_employee"}),"(command: &",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),", employees: &",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut"})," HashMap<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),", ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),">>) ",(0,l.jsx)(e.span,{className:"hljs-punctuation",children:"->"})," ",(0,l.jsx)(e.span,{className:"hljs-type",children:"bool"})," {\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"command_words"}),": ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),"> = command.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"split_whitespace"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"map"}),"(",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),"::from).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"collect"}),"();\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"cmd"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"0"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_string"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n	\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," cmd == ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"add"'})," {\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"name"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"1"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_string"}),"();\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"dep"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"3"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_string"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n		",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Added {} to {}"'}),", name, dep);\n		employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"entry"}),"(dep).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"or_insert_with"}),"(",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"::new).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"push"}),"(name);\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"return"})," ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),";\n	} ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"else"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," cmd == ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"list"'})," {\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"list_type"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"1"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n		\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," list_type == ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"employees"'})," {\n			",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"emps"})," = ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"::",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"new"}),"();\n			",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"for"})," (_dept, dept_emps) ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"in"})," employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"iter"}),"() {\n				",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"for"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"emp"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"in"})," dept_emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"into_iter"}),"() {\n					emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"push"}),"(emp);\n				}\n			}\n			emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"sort"}),"();\n			",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees: {:?}"'}),", emps);\n			",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"return"})," ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),";\n		} ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"else"})," {\n			",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"nut"})," emps = employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"get"}),"(&list_type).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"cloned"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"unwrap_or_default"}),"();\n			emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"sort"}),"();\n			",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees in Department {}: {:?}"'}),", list_type, emps);\n			",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"return"})," ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),";\n		}\n	} ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"else"})," {\n		",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Exiting..."'}),");\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"return"})," ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"false"}),";\n	}\n}\n"]})}),"\n",(0,l.jsx)(e.p,{children:"Output"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'Welcome: to the employee directory! when you are done type exit.\n============================\nInput: Add Sally to Engineering\nAdded Sally to engineering\nInput: Add Amir to Sales\nAdded Amir to sales\nInput: Add Juan to Accounting\nAdded Juan to accounting\nInput: Add George to HR\nAdded George to hr\nInput: Add Eric to Sales\nAdded Eric to sales\nInput: Add Sam to Engineering\nAdded Sam to engineering\nInput: Add Cole to Engineering\nAdded Cole to engineering\nInput: List Employees\nEmployees: ["Amir", "Cole", "Eric", "George", "Juan", "Sally", "Sam"]\nInput: List Sales\nEmployees in Department sales: ["Amir", "Eric"]\nInput: List Engineering\nEmployees in Department engineering: ["Cole", "Sally", "Sam"]\nInput: List HR\nEmployees in Department hr: ["George"]\nInput: Exit\nExiting...\n'})}),"\n",(0,l.jsx)(e.p,{children:"Looks good!!"}),"\n",(0,l.jsx)(e.h3,{children:"Challenges"}),"\n",(0,l.jsx)(e.p,{children:"The major hurdle when creating the solution above was how to split the input by whitespace into a vector of strings.  I asked ChatGPT for some help..."}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsx)(e.p,{children:"How can this error be fixed?"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"a value of type `Vec<&String>` cannot be built from an iterator over elements of type `&str`\n"})}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsx)(e.p,{children:"the error comes from this line of rust code:"}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-rust",children:[(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"command_words"}),": ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<&",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),"> = command.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"split_whitespace"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"collect"}),"();\n"]})}),"\n",(0,l.jsx)(e.p,{children:"The response which was very helpful."}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.p,{children:["The error message suggests that the ",(0,l.jsx)(e.code,{children:"split_whitespace()"})," method is returning an iterator over ",(0,l.jsx)(e.code,{children:"&str"})," values, but you are trying to collect them into a ",(0,l.jsx)(e.code,{children:"Vec<&String>"}),", which expects references to ",(0,l.jsx)(e.code,{children:"String"})," values.\nTo fix this error, you can either change the type of ",(0,l.jsx)(e.code,{children:"command_words"})," to ",(0,l.jsx)(e.code,{children:"Vec<&str>"}),":"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-rust",children:["`",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"command_words"}),": ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<&",(0,l.jsx)(e.span,{className:"hljs-type",children:"str"}),"> = command.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"split_whitespace"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"collect"}),"();`\n"]})}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.p,{children:["Or you can change the type of the elements in the ",(0,l.jsx)(e.code,{children:"Vec"})," to ",(0,l.jsx)(e.code,{children:"String"})," instead of ",(0,l.jsx)(e.code,{children:"&String"}),":"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-rust",children:[(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"}),"\xa0",(0,l.jsx)(e.span,{className:"hljs-variable",children:"command_words"}),":\xa0",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),"> = command.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"split_whitespace"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"map"}),"(",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),"::from).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"collect"}),"();`\n"]})}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"map()"})," method is used to transform each ",(0,l.jsx)(e.code,{children:"&str"})," value into a ",(0,l.jsx)(e.code,{children:"String"})," value."]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{children:"Refactoring"}),"\n",(0,l.jsx)(e.p,{children:"Now time for the refactoring!! I asked how the code above could be more idiomatic. Here was the response."}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsx)(e.p,{children:"Here are some suggestions to make the Rust code more idiomatic:"}),"\n"]}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"Use pattern matching instead of if/else statements:"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-rust",children:[(0,l.jsx)(e.span,{className:"hljs-keyword",children:"match"})," cmd.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"as_str"}),"() {\n    ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"add"'})," => {\n        ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"name"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"1"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_string"}),"();\n        ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"dep"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"3"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_string"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n        ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Added {} to {}"'}),", name, dep);\n        employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"entry"}),"(dep).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"or_insert_with"}),"(",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"::new).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"push"}),"(name);\n        ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n    }\n    ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"list"'})," => {\n        ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"list_type"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"1"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n\n        ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," list_type == ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"employees"'})," {\n            ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"emps"})," = ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"::",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"new"}),"();\n            ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"for"})," (_dept, dept_emps) ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"in"})," employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"iter"}),"() {\n                emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"extend"}),"(dept_emps);\n            }\n            emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"sort"}),"();\n            ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees: {:?}"'}),", emps);\n            ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n        } ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"else"})," {\n            ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"emps"})," = employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"get"}),"(&list_type).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"cloned"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"unwrap_or_default"}),"();\n            emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"sort"}),"();\n            ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees in Department {}: {:?}"'}),", list_type, emps);\n            ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n        }\n    }\n    _ => {\n        ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Exiting..."'}),");\n        ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"false"}),"\n    }\n}\n"]})}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.ol,{start:"2",children:["\n",(0,l.jsxs)(e.li,{children:["Use ",(0,l.jsx)(e.code,{children:"if let"})," instead of ",(0,l.jsx)(e.code,{children:"unwrap_or_default"}),":"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-rust",children:[(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"Some"}),"(emps) = employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"get"}),"(&list_type) {\n    ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"emps"})," = emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"clone"}),"();\n    emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"sort"}),"();\n    ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees in Department {}: {:?}"'}),", list_type, emps);\n} ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"else"})," {\n    ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Department {} not found"'}),", list_type);\n}\n",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n"]})}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.ol,{start:"3",children:["\n",(0,l.jsxs)(e.li,{children:["Use ",(0,l.jsx)(e.code,{children:"flatten"})," instead of nested loops:"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-rust",children:[(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"emps"})," = employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"values"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"flatten"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"cloned"}),"().collect::<",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<_>>();\n",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees: {:?}"'}),", emps);\n",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n\n"]})}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.ol,{start:"4",children:["\n",(0,l.jsxs)(e.li,{children:["Use ",(0,l.jsx)(e.code,{children:"&str"})," instead of ",(0,l.jsx)(e.code,{children:"String"})," when possible:"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-rust",children:[(0,l.jsx)(e.span,{className:"hljs-keyword",children:"fn"})," ",(0,l.jsx)(e.span,{className:"hljs-title function_",children:"record_employee"}),"(command: &",(0,l.jsx)(e.span,{className:"hljs-type",children:"str"}),", employees: &",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut"})," HashMap<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),", ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),">>) ",(0,l.jsx)(e.span,{className:"hljs-punctuation",children:"->"})," ",(0,l.jsx)(e.span,{className:"hljs-type",children:"bool"})," {\n    ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"command_words"}),": ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<_> = command.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"split_whitespace"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"collect"}),"();\n    ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"cmd"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"0"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n\n    ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"match"})," cmd.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"as_str"}),"() {\n        ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"add"'})," => {\n            ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"name"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"1"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_string"}),"();\n            ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"dep"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"3"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n            ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Added {} to {}"'}),", name, dep);\n            employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"entry"}),"(dep).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"or_insert_with"}),"(",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"::new).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"push"}),"(name);\n            ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n        }\n        ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"list"'})," => {\n            ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"list_type"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"1"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n\n            ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," list_type == ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"employees"'})," {\n                ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"emps"})," = employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"values"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"flatten"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"cloned"}),"().collect::<",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<_>>();\n                ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees: {:?}"'}),", emps);\n                ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n            } ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"else"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"Some"}),"(emps) = employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"get"}),"(&list_type) {\n                ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"emps"})," = emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"clone"}),"();\n                emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"sort"}),"();\n                ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees in Department {}: {:?}"'}),", list_type, emps);\n                ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n            } ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"else"})," {\n                ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Department {} not found"'}),", list_type);\n                ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n            }\n        }\n        _ => {\n            ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Exiting..."'}),");\n            ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"false"}),"\n        }\n    }\n}\n"]})}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.ol,{start:"5",children:["\n",(0,l.jsxs)(e.li,{children:["Use ",(0,l.jsx)(e.code,{children:"let mut"})," only when necessary:"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-rust",children:[(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"emps"})," = ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"::",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"new"}),"();\n",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"for"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"dept_emps"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"in"})," employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"values"}),"() {\n    emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"extend"}),"(dept_emps);\n}\nemps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"sort"}),"();\n",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees: {:?}"'}),", emps);\n",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n"]})}),"\n",(0,l.jsx)(e.p,{children:"Since it is broken into a few sections. I've put it all into a working code block below with the exception of point #5 because it conflicts with the flatten method #3. Flatten makes more sense to me. It is debatable that #5 is a clearer way to express the logic."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsxs)(e.code,{className:"hljs language-rust",children:[(0,l.jsx)(e.span,{className:"hljs-keyword",children:"use"})," std::collections::HashMap;\n",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"use"})," std::io;\n\n",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"fn"})," ",(0,l.jsx)(e.span,{className:"hljs-title function_",children:"main"}),"() {\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"employees_real"}),": HashMap<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),", ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),">> = HashMap::",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"new"}),"();\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"repeat"})," = ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),";\n	\n	",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Welcome: to the employee directory! when you are done type exit."'}),");\n	",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"============================"'}),");\n	\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"while"})," repeat {\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"input"})," = ",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),"::",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"new"}),"();\n		io::",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"stdin"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"read_line"}),"(&",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut"})," input).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"expect"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Invalid input!"'}),");\n		",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"input"})," = input.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"trim"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_string"}),"();\n		",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Input: {}"'}),", input);\n		repeat = ",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"record_employee"}),"(&input, &",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut"})," employees_real);\n	}\n}\n\n",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"fn"})," ",(0,l.jsx)(e.span,{className:"hljs-title function_",children:"record_employee"}),"(command: &",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),", employees: &",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut"})," HashMap<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),", ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<",(0,l.jsx)(e.span,{className:"hljs-type",children:"String"}),">>) ",(0,l.jsx)(e.span,{className:"hljs-punctuation",children:"->"})," ",(0,l.jsx)(e.span,{className:"hljs-type",children:"bool"})," {\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"command_words"}),": ",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<_> = command.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"split_whitespace"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"collect"}),"();\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"cmd"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"0"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n	\n	",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"match"})," cmd.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"as_str"}),"() {\n		\n		",(0,l.jsx)(e.span,{className:"hljs-string",children:'"add"'})," => {\n		    ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"name"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"1"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_string"}),"();\n		    ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"dep"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"3"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n		    ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Added {} to {}"'}),", name, dep);\n		    employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"entry"}),"(dep).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"or_insert_with"}),"(",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"::new).",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"push"}),"(name);\n		    ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n	    }\n		\n	    ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"list"'})," => {\n		    ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"list_type"})," = command_words[",(0,l.jsx)(e.span,{className:"hljs-number",children:"1"}),"].",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"to_lowercase"}),"();\n		\n		    ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," list_type == ",(0,l.jsx)(e.span,{className:"hljs-string",children:'"employees"'})," {\n			    ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"emps"})," = employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"values"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"flatten"}),"().",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"cloned"}),"().collect::<",(0,l.jsx)(e.span,{className:"hljs-type",children:"Vec"}),"<_>>();\n			    emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"sort"}),"();\n			    ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees: {:?}"'}),", emps);\n		    } ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"else"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"if"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-variable",children:"Some"}),"(emps) = employees.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"get"}),"(&list_type) {\n				",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"let"})," ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"mut "}),(0,l.jsx)(e.span,{className:"hljs-variable",children:"emps"})," = emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"clone"}),"();\n				emps.",(0,l.jsx)(e.span,{className:"hljs-title function_ invoke__",children:"sort"}),"();\n				",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Employees in Department {}: {:?}"'}),", list_type, emps);\n			} ",(0,l.jsx)(e.span,{className:"hljs-keyword",children:"else"})," {\n				",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Department {} not found"'}),", list_type);\n			}\n			",(0,l.jsx)(e.span,{className:"hljs-literal",children:"true"}),"\n	    }\n		\n	    _ => {\n		    ",(0,l.jsx)(e.span,{className:"hljs-built_in",children:"println!"}),"(",(0,l.jsx)(e.span,{className:"hljs-string",children:'"Exiting..."'}),");\n		    ",(0,l.jsx)(e.span,{className:"hljs-literal",children:"false"}),"\n	    }\n	}\n}\n"]})}),"\n",(0,l.jsx)(e.p,{children:"Output"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'Welcome: to the employee directory! when you are done type exit.\n============================\nInput: Add Sally to Engineering\nAdded Sally to engineering\nInput: Add Amir to Sales\nAdded Amir to sales\nInput: Add Juan to Accounting\nAdded Juan to accounting\nInput: Add George to HR\nAdded George to hr\nInput: Add Eric to Sales\nAdded Eric to sales\nInput: Add Sam to Engineering\nAdded Sam to engineering\nInput: Add Cole to Engineering\nAdded Cole to engineering\nInput: List Employees\nEmployees: ["Amir", "Cole", "Eric", "George", "Juan", "Sally", "Sam"]\nInput: List Sales\nEmployees in Department sales: ["Amir", "Eric"]\nInput: List Engineering\nEmployees in Department engineering: ["Cole", "Sally", "Sam"]\nInput: List HR\nEmployees in Department hr: ["George"]\nInput: Exit\nExiting...\n'})}),"\n",(0,l.jsxs)(e.p,{children:["Overall I'm impressed with the result. I think it helped show how to use the ",(0,l.jsx)(e.code,{children:"collect::<T>()"})," method to convert types and how to use ",(0,l.jsx)(e.code,{children:"if let"})," idiomatically."]})]})}function h(s={}){return(0,l.jsx)(t,{...s,children:(0,l.jsx)(r,{...s})})}},9172:(s,e,n)=>{"use strict";n.d(e,{T:()=>d});var l=n(7876),a=n(7328),i=n.n(a),c=n(5587),t=n(2120),r=n(9241);function h({children:s,className:e}){return(0,l.jsx)("div",{className:(0,r.A)(e,"prose dark:prose-invert"),children:s})}function d({children:s,meta:e,isRssFeed:n=!1,previousPathname:a}){return n?s:(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(i(),{children:[(0,l.jsx)("title",{children:`${e.title} - Daniel Butler`}),(0,l.jsx)("meta",{name:"description",content:e.description})]}),(0,l.jsx)(c.m,{className:"mt-16 lg:mt-32",children:(0,l.jsx)("div",{className:"xl:relative",children:(0,l.jsx)("div",{className:"mx-auto max-w-2xl",children:(0,l.jsxs)("article",{children:[(0,l.jsxs)("header",{className:"flex flex-col",children:[(0,l.jsx)("h1",{className:"mt-6 text-4xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100 sm:text-5xl",children:e.title}),(0,l.jsxs)("time",{dateTime:e.date,className:"order-first flex items-center text-base text-zinc-400 dark:text-zinc-500",children:[(0,l.jsx)("span",{className:"h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500"}),(0,l.jsx)("span",{className:"ml-3",children:(0,t.Y)(e.date)})]})]}),(0,l.jsx)(h,{className:"mt-8",children:s})]})})})})]})}}},s=>{s.O(0,[636,593,792],()=>s(s.s=4348)),_N_E=s.O()}]);