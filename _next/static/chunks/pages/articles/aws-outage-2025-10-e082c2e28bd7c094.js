(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[727],{1668:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var a=n(4232);let s=a.createContext({});function i(e){let t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}},2120:(e,t,n)=>{"use strict";function a(e){return new Date(`${e}T00:00:00Z`).toLocaleDateString("en-US",{day:"numeric",month:"long",year:"numeric",timeZone:"UTC"})}n.d(t,{Y:()=>a})},3316:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>h,meta:()=>o});var a=n(7876),s=n(1668),i=n(9172);let o={author:"Daniel Butler",date:"2025-10-27",title:"AWS Outage - Network Load Balancer Take",description:"Flapping in the wild."},r=e=>(0,a.jsx)(i.T,{meta:o,...e});function c(e){let t={a:"a",blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:"The opinions and information expressed in this posts are my own and in no way reflect the opinion of my Employer, Amazon.com"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"A lot has been discussed about AWS’ DynamoDB outage already. If you haven’t read it yet I suggest spending the few minutes to go through it. The best lessons are from the scars of others!"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://aws.amazon.com/message/101925/",children:"https://aws.amazon.com/message/101925/"})}),"\n",(0,a.jsx)(t.p,{children:"There is already a lot on the DNS delegators and how they failed. What I found interesting from reading between the lines was the Network Load Balancer (NLB) failure. AWS has another type of load balancer, Application load balancers (ALB). The ALBs weren’t impacted, why?"}),"\n",(0,a.jsx)(t.p,{children:"The answer basically comes down to a case of real world flapping. This is the NLB quote from the report."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:"During the event the NLB health checking subsystem began to experience increased health check failures. This was caused by the health checking subsystem bringing new EC2 instances into service while the network state for those instances had not yet fully propagated. This meant that in some cases health checks would fail even though the underlying NLB node and backend targets were healthy. This resulted in health checks alternating between failing and healthy. This caused NLB nodes and backend targets to be removed from DNS, only to be returned to service when the next health check succeeded."}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["The likely cause is Network Load Balancers passive health checks - Application Load Balancers don't have them.  Active health checks are calls to endpoint like ",(0,a.jsx)(t.code,{children:"/health"})," while passive health checks monitor actual connections."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["With passive health checks, the load balancer observes how targets respond to connections. Passive health checks enable the load balancer to detect an unhealthy target before it is reported as unhealthy by the active health checks. You cannot disable, configure, or monitor passive health checks. Passive health checks are not supported for UDP traffic, and target groups with stickiness turned on. ",(0,a.jsx)(t.a,{href:"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/target-group-health-checks.html",children:"Documentation Link"})]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["The key point is passive health checks watch the actual traffic. There is no slack for errors.  Some requests worked while others didn't causing the targets to flap (",(0,a.jsx)(t.code,{children:"fail"})," -> ",(0,a.jsx)(t.code,{children:"succeed"})," -",(0,a.jsx)(t.code,{children:"fail"})," -> ",(0,a.jsx)(t.code,{children:"succeed"})," -> etc)."]}),"\n",(0,a.jsx)(t.p,{children:"It’s one of those hard lessons of why you don’t necessary want instantaneous feedback. Quick feedback is good but overwhelming feedback becomes noise or worse."}),"\n",(0,a.jsx)(t.p,{children:"I’m an outsider looking in, it seems like the biggest mismatch is the resource server wasn’t protected from its clients. Generally throttling is how that protection is implemented."}),"\n",(0,a.jsx)(t.p,{children:"As a bonus this is a visual representation of the failures and the cascading effect it had. Personally, the team I am on was involved in the cascading impact after the NLB failures were resolved."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"hljs language-mermaid",children:"gantt\n      title AWS US-EAST-1 Outage - Service Impact Timeline (14.5 hours)\n      dateFormat YYYY-MM-DD HH:mm\n\n      section Root Cause\n      DynamoDB DNS Failure           :crit, 2025-10-19 23:48, 2025-10-20 02:40\n\n      section Lambda\n      Lambda Wave 1 (DynamoDB)       :w1lambda, 2025-10-19 23:51, 2025-10-20 02:24\n      Lambda SQS Polling Issue       :active, 2025-10-20 02:24, 2025-10-20 06:00\n      Lambda Wave 2 (NLB)            :done, 2025-10-20 07:04, 2025-10-20 14:15\n\n      section Connect\n      Connect Wave 1 (DynamoDB)      :w1connect, 2025-10-19 23:56, 2025-10-20 05:00\n      Connect Wave 2 (NLB)           :done, 2025-10-20 07:04, 2025-10-20 13:20\n\n      section EC2 Cascade\n      EC2 DWFM Failures             :active, 2025-10-19 23:48, 2025-10-20 05:28\n      EC2 Network State Issues      :active, 2025-10-20 05:28, 2025-10-20 10:36\n      EC2 Throttling Recovery       :active, 2025-10-20 10:36, 2025-10-20 13:50\n\n      section NLB Cascade\n      NLB Connection Errors         :done, 2025-10-20 05:30, 2025-10-20 14:09\n\n      section Other Services\n      STS Wave 1 (DynamoDB)          :w1other, 2025-10-19 23:51, 2025-10-20 01:19\n      STS Wave 2 (NLB)               :done, 2025-10-20 08:31, 2025-10-20 09:59\n      Console Auth (DynamoDB)        :w1other, 2025-10-19 23:51, 2025-10-20 01:25\n      Redshift Query Failures (DDB)  :w1other, 2025-10-19 23:47, 2025-10-20 02:21\n      Redshift Cluster Impairment (EC2) :active, 2025-10-20 02:21, 2025-10-21 04:05\n      ECS EKS Fargate (EC2)          :w1other, 2025-10-19 23:45, 2025-10-20 14:20\n"})})]})}function h(e={}){return(0,a.jsx)(r,{...e,children:(0,a.jsx)(c,{...e})})}},7328:(e,t,n)=>{e.exports=n(9836)},9172:(e,t,n)=>{"use strict";n.d(t,{T:()=>l});var a=n(7876),s=n(7328),i=n.n(s),o=n(5587),r=n(2120),c=n(9241);function h({children:e,className:t}){return(0,a.jsx)("div",{className:(0,c.A)(t,"prose dark:prose-invert"),children:e})}function l({children:e,meta:t,isRssFeed:n=!1,previousPathname:s}){return n?e:(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(i(),{children:[(0,a.jsx)("title",{children:`${t.title} - Daniel Butler`}),(0,a.jsx)("meta",{name:"description",content:t.description})]}),(0,a.jsx)(o.m,{className:"mt-16 lg:mt-32",children:(0,a.jsx)("div",{className:"xl:relative",children:(0,a.jsx)("div",{className:"mx-auto max-w-2xl",children:(0,a.jsxs)("article",{children:[(0,a.jsxs)("header",{className:"flex flex-col",children:[(0,a.jsx)("h1",{className:"mt-6 text-4xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100 sm:text-5xl",children:t.title}),(0,a.jsxs)("time",{dateTime:t.date,className:"order-first flex items-center text-base text-zinc-400 dark:text-zinc-500",children:[(0,a.jsx)("span",{className:"h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500"}),(0,a.jsx)("span",{className:"ml-3",children:(0,r.Y)(t.date)})]})]}),(0,a.jsx)(h,{className:"mt-8",children:e})]})})})})]})}},9184:(e,t,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/articles/aws-outage-2025-10",function(){return n(3316)}])}},e=>{e.O(0,[636,593,792],()=>e(e.s=9184)),_N_E=e.O()}]);